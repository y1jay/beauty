// Generated by view binder compiler. Do not edit!
package com.yijun.beauty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.yijun.beauty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNickNameBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCheck;

  @NonNull
  public final EditText editNickName;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView txtEmail;

  private ActivityNickNameBinding(@NonNull LinearLayout rootView, @NonNull Button btnCheck,
      @NonNull EditText editNickName, @NonNull ImageView imageView5, @NonNull TextView textView4,
      @NonNull TextView txtEmail) {
    this.rootView = rootView;
    this.btnCheck = btnCheck;
    this.editNickName = editNickName;
    this.imageView5 = imageView5;
    this.textView4 = textView4;
    this.txtEmail = txtEmail;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNickNameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNickNameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_nick_name, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNickNameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button btnCheck = rootView.findViewById(R.id.btn_check);
      if (btnCheck == null) {
        missingId = "btnCheck";
        break missingId;
      }
      EditText editNickName = rootView.findViewById(R.id.edit_nick_name);
      if (editNickName == null) {
        missingId = "editNickName";
        break missingId;
      }
      ImageView imageView5 = rootView.findViewById(R.id.imageView5);
      if (imageView5 == null) {
        missingId = "imageView5";
        break missingId;
      }
      TextView textView4 = rootView.findViewById(R.id.textView4);
      if (textView4 == null) {
        missingId = "textView4";
        break missingId;
      }
      TextView txtEmail = rootView.findViewById(R.id.txt_email);
      if (txtEmail == null) {
        missingId = "txtEmail";
        break missingId;
      }
      return new ActivityNickNameBinding((LinearLayout) rootView, btnCheck, editNickName,
          imageView5, textView4, txtEmail);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
