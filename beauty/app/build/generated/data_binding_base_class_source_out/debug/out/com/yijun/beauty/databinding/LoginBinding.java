// Generated by view binder compiler. Do not edit!
package com.yijun.beauty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.yijun.beauty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox Auto;

  @NonNull
  public final EditText editID;

  @NonNull
  public final EditText editPasswd;

  @NonNull
  public final TextView findId;

  @NonNull
  public final TextView findPass;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView txtNO;

  @NonNull
  public final TextView txtYES;

  private LoginBinding(@NonNull LinearLayout rootView, @NonNull CheckBox Auto,
      @NonNull EditText editID, @NonNull EditText editPasswd, @NonNull TextView findId,
      @NonNull TextView findPass, @NonNull TextView textView, @NonNull TextView txtNO,
      @NonNull TextView txtYES) {
    this.rootView = rootView;
    this.Auto = Auto;
    this.editID = editID;
    this.editPasswd = editPasswd;
    this.findId = findId;
    this.findPass = findPass;
    this.textView = textView;
    this.txtNO = txtNO;
    this.txtYES = txtYES;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      CheckBox Auto = rootView.findViewById(R.id.Auto);
      if (Auto == null) {
        missingId = "Auto";
        break missingId;
      }
      EditText editID = rootView.findViewById(R.id.editID);
      if (editID == null) {
        missingId = "editID";
        break missingId;
      }
      EditText editPasswd = rootView.findViewById(R.id.editPasswd);
      if (editPasswd == null) {
        missingId = "editPasswd";
        break missingId;
      }
      TextView findId = rootView.findViewById(R.id.find_id);
      if (findId == null) {
        missingId = "findId";
        break missingId;
      }
      TextView findPass = rootView.findViewById(R.id.find_pass);
      if (findPass == null) {
        missingId = "findPass";
        break missingId;
      }
      TextView textView = rootView.findViewById(R.id.textView);
      if (textView == null) {
        missingId = "textView";
        break missingId;
      }
      TextView txtNO = rootView.findViewById(R.id.txtNO);
      if (txtNO == null) {
        missingId = "txtNO";
        break missingId;
      }
      TextView txtYES = rootView.findViewById(R.id.txtYES);
      if (txtYES == null) {
        missingId = "txtYES";
        break missingId;
      }
      return new LoginBinding((LinearLayout) rootView, Auto, editID, editPasswd, findId, findPass,
          textView, txtNO, txtYES);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
